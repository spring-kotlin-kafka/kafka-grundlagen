version: '3.8'

services:
  kafka:
    image: apache/kafka:4.0.0
    hostname: kafka
    container_name: ch-open-workshop_kafka
    ports:
      - "9190:9190"       # External Kafka Port (Host)
    environment:
      CLUSTER_ID: L4rE3vsnR1y1qu3AOgIDUg # 16 bytes of a base64-encoded UUID.
      KAFKA_NODE_ID: # id in the cluster
      KAFKA_PROCESS_ROLES: # roles of the broker
      KAFKA_CONTROLLER_QUORUM_VOTERS: # all voters comma separated with id@controller-inside-docker
      KAFKA_LISTENERS: # all listener (broker,controller,external) with NAME://listener
      KAFKA_ADVERTISED_LISTENERS: # all advertised listener (controller,external) with NAME://listener
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: # security map with NAME:SECURITY
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: unless-stopped

  kafka-init:
    image: apache/kafka:4.0.0
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      echo -e 'Creating kafka topics'
      # Create topics here

      echo -e 'Successfully created the following topics:'
      # List topics here
      "

  kafdrop:
    image: obsidiandynamics/kafdrop:4.1.0
    container_name: ch-open-workshop_kafdrop
    restart: unless-stopped
    ports:
      - "9192:9000"
    environment:
      KAFKA_BROKERCONNECT: "docker_image:port"
      JVM_OPTS: "-Xms32M -Xmx64M"
    depends_on:
      - kafka

  schema-registry:
    image: confluentinc/cp-schema-registry:7.9.2
    container_name: ch-open-workshop_schema-registry
    ports:
      - "9191:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:29092
    restart: unless-stopped
    depends_on:
      - kafka
